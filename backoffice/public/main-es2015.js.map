{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/accept/accept.component.html","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/detailprojet/contributor/contributor.component.html","./src/app/components/dashboard/detailprojet/detailprojet.component.html","./src/app/components/dashboard/detailprojet/detailsprint/detailsprint.component.html","./src/app/components/dashboard/detailprojet/documentation/documentation.component.html","./src/app/components/dashboard/detailprojet/issue/issue.component.html","./src/app/components/dashboard/detailprojet/release/release.component.html","./src/app/components/dashboard/detailprojet/sprint/sprint.component.html","./src/app/components/dashboard/detailprojet/task/task.component.html","./src/app/components/dashboard/detailprojet/test/test.component.html","./src/app/components/dashboard/listprojets/listprojets.component.html","./src/app/components/dashboard/userdetail/userdetail.component.html","./src/app/components/user/login/login.component.html","./src/app/components/user/register/register.component.html","./src/app/components/user/user.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/components/accept/accept.component.scss","./src/app/components/accept/accept.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/detailprojet/contributor/contributor.component.ts","./src/app/components/dashboard/detailprojet/detailprojet.component.ts","./src/app/components/dashboard/detailprojet/detailsprint/detailsprint.component.ts","./src/app/components/dashboard/detailprojet/documentation/documentation.component.ts","./src/app/components/dashboard/detailprojet/issue/issue.component.ts","./src/app/components/dashboard/detailprojet/release/release.component.ts","./src/app/components/dashboard/detailprojet/sprint/sprint.component.ts","./src/app/components/dashboard/detailprojet/task/task.component.ts","./src/app/components/dashboard/detailprojet/test/test.component.ts","./src/app/components/dashboard/listprojets/listprojets.component.ts","./src/app/components/dashboard/userdetail/userdetail.component.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/register/register.component.ts","./src/app/components/user/user.component.ts","./src/app/services/contributor.service.ts","./src/app/services/documentations.service.ts","./src/app/services/issues.service.ts","./src/app/services/projet.service.ts","./src/app/services/releases.service.ts","./src/app/services/sprint.service.ts","./src/app/services/tasks.service.ts","./src/app/services/tests.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n  <router-outlet></router-outlet>\\n\"","export default \"<div id=\\\"row\\\">\\n    <div class=\\\"container-fluid\\\" style=\\\"margin-top: 1%\\\">\\n        <div class=\\\"jumbotron\\\">\\n            <h1 class=\\\"display-4\\\">Félicitations !</h1>\\n            <p class=\\\"lead\\\">Vous êtes maintenant contributeur dans le projet !</p>\\n            <hr class=\\\"my-4\\\">\\n            <p>Connectez-vous pour continuer </p>\\n            <a class=\\\"btn btn-primary btn-lg\\\" routerLink=\\\"/login\\\" role=\\\"button\\\">Se connecter</a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div id=\\\"navbar\\\" class=\\\"navbar-header\\\" *ngIf=\\\"userInfos\\\">\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MyProjectManager</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n      </ul>\\n    </div>\\n    <div id=\\\"navbar-username\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n            <li class=\\\"dropdown\\\">\\n              <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{ userInfos.name}}<span class=\\\"caret\\\"></span></a>\\n              <ul class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"logout()\\\" class=\\\"fa fa-sign-out\\\">Déconnexion</a></li>\\n              </ul>\\n            </li>\\n        </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n<div id=\\\"viewport\\\" style=\\\"padding-top:50px\\\">\\n  <!-- Sidebar -->\\n  <div *ngIf=\\\"userInfos\\\" id=\\\"sidebar\\\">\\n\\n    <ul class=\\\"nav\\\" style=\\\"padding-top:20px\\\">\\n      <li>\\n        <a routerLink=\\\"projects\\\">\\n          <em class=\\\"zmdi zmdi-view-dashboard fa fa-folder-open-o\\\"></em> Mes projets\\n        </a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"userdetail\\\">\\n          <em class=\\\"zmdi zmdi-view-dashboard fa fa-user\\\"></em> Mon profil\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n  <!-- Content -->\\n  <div id=\\\"content\\\">\\n    <div class=\\\"container-fluid\\\" style=\\\"margin-top: 1%\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Liste des contributeurs</h5>\\n            <button *ngIf=\\\"isCreator\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#invitationModel\\\"\\n                class=\\\"btn btn-info\\\">Invitations</button>\\n        </div>\\n        <table class=\\\"table table-striped\\\">\\n            <caption>Liste des issues</caption>\\n            <thead class=\\\"thead\\\">\\n                <tr>\\n                    <th scope=\\\"col\\\">Nom </th>\\n                    <th scope=\\\"col\\\">Email </th>\\n                    <th scope=\\\"col\\\"></th>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr *ngFor=\\\"let contributor of contributors\\\">\\n                    <td>{{contributor?.name}}</td>\\n                    <td>{{contributor?.email}}</td>\\n\\n                    <td>\\n                        <button *ngIf=\\\"isCreator\\\" type=\\\"button\\\" (click)=\\\"removeContributor(contributor?._id)\\\"\\n                            class=\\\"btn btn-danger\\\"><em class=\\\"fa fa-trash-o\\\"></em></button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"isCreator\\\" class=\\\"modal fade\\\" id=\\\"invitationModel\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n    aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Liste des invitations</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Invitation</h5>\\n                    <div class=\\\"form-group\\\">\\n                        <ng-select (add)=\\\"onAdd($event)\\\" class=\\\"custom\\\" placeholder=\\\"+ Inviter un contributeur\\\"\\n                            [(ngModel)]=\\\"selectedUser\\\" [multiple]=\\\"true\\\">\\n                            <ng-option *ngFor=\\\"let user of users\\\" [value]=\\\"user?.email\\\">{{user?.email}} - {{user?.name}}\\n                            </ng-option>\\n                        </ng-select>\\n                    </div>\\n                    <div *ngIf=\\\"waiting\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                        Envoi de l'invitation en cours\\n                    </div>\\n                    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n                        L'invitation a été envoyé avec succès\\n                    </div>\\n                </div>\\n                <!--<ul class=\\\"list-group\\\">\\n                    <li *ngFor=\\\"let invitation of invitations\\\"\\n                        class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n                        {{invitation?.emailUser}}\\n                        <span class=\\\"badge badge-secondary badge-pill\\\"> {{invitation?.date}}</span>\\n                        <span *ngIf=\\\"invitation?.status===0\\\" class=\\\"badge badge-dark badge-pill\\\">En attente</span>\\n                        <span *ngIf=\\\"invitation?.status===1\\\" class=\\\"badge badge-success badge-pill\\\">Acceptée</span>\\n                    </li>\\n                </ul>-->\\n                <div class=\\\"row justify-content-center\\\">\\n                <table style=\\\"width: 80%;\\\">\\n                    <tr *ngFor=\\\"let invitation of invitations\\\">\\n                        <td>{{invitation?.emailUser}}</td>\\n                        <td><span class=\\\"badge badge-secondary badge-pill\\\"> {{invitation?.date}}</span></td>\\n                        <td>\\n                            <span *ngIf=\\\"invitation?.status===1\\\" class=\\\"badge badge-success badge-pill\\\">Acceptée</span>\\n                            <span *ngIf=\\\"invitation?.status===0\\\" class=\\\"badge badge-dark badge-pill\\\">En attente</span>\\n                        </td>\\n                        <td><a href=\\\"javascript:void(0);\\\" *ngIf=\\\"invitation?.status===0\\\" (click)='deleteInvitation(invitation?._id)' class=\\\"badge badge-danger badge-pill\\\">X</a>\\n                        </td>\\n                    </tr>\\n                </table>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card w-100\\\">\\n    <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">{{ project?.title }}</h4>\\n        <p class=\\\"card-text\\\" style=\\\"color: gray;\\\">{{ project?.description }}</p>\\n        <a *ngIf=\\\"isCreator\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" href=\\\"#editproject\\\" role=\\\"button\\\"\\n            aria-expanded=\\\"false\\\" aria-controls=\\\"editproject\\\">Editer <em class=\\\"fa fa-pencil\\\"></em></a>\\n    </div>\\n\\n    <div class=\\\"collapse multi-collapse\\\" id=\\\"editproject\\\">\\n        <div class=\\\"card card-body\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <fieldset>\\n                    <legend>Modifier le projet</legend>\\n                    <form #editproject=\\\"ngForm\\\" (ngSubmit)=\\\"editProject(editproject)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <input style=\\\"width: 100%;\\\" required type=\\\"email\\\" [(ngModel)]=\\\"modelproject.title\\\"\\n                                class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"title\\\" ng-init=\\\"myText='Hello World!'\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <textarea class=\\\"form-control\\\" required style=\\\"width: 100%;resize: none;\\\"\\n                                [(ngModel)]=\\\"modelproject.description\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                rows=\\\"4\\\">{{project?.description}}</textarea>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <select style=\\\"width: 100%;\\\" class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\"\\n                                [(ngModel)]=\\\"modelproject.status\\\" [value]='0'>\\n                                <option disabled value='0'>Status</option>\\n                                <option>En cours</option>\\n                                <option>Terminé</option>\\n                            </select>\\n                        </div>\\n                        <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#editproject\\\" role=\\\"button\\\"\\n                            (click)=\\\"editProject(editproject)\\\" aria-expanded=\\\"false\\\"\\n                            aria-controls=\\\"editproject\\\">Confirmer</a>\\n                    </form>\\n                </fieldset>\\n            </div>\\n        </div>\\n    </div>\\n</div><br>\\n<ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='issues' role=\\\"tab\\\"\\n            aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Issues</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"taches-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='tasks' role=\\\"tab\\\"\\n            aria-controls=\\\"taches\\\" aria-selected=\\\"false\\\">Tâches</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"sprints-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='sprints' role=\\\"tab\\\"\\n            aria-controls=\\\"sprints\\\" aria-selected=\\\"false\\\">Sprints</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='tests' role=\\\"tab\\\"\\n            aria-controls=\\\"tests\\\" aria-selected=\\\"false\\\">Tests</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"releases-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='releases'\\n            role=\\\"tab\\\" aria-controls=\\\"releases\\\" aria-selected=\\\"false\\\">Releases</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"documentations-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\"\\n            routerLink='documentations' role=\\\"tab\\\" aria-controls=\\\"documentations\\\"\\n            aria-selected=\\\"false\\\">Documentations</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"contributor-tab\\\" data-toggle=\\\"tab\\\" routerLinkActive=\\\"active\\\" routerLink='contributors' role=\\\"tab\\\"\\n            aria-controls=\\\"contributor\\\" aria-selected=\\\"false\\\">Contributeurs</a>\\n    </li>\\n</ul>\\n\\n<div class=\\\"tab-content\\\">\\n    <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\n\\n        <app-root></app-root>\\n    </div>\\n</div>\"","export default \"<br>\\n<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">{{sprint?.title}} <span class=\\\"badge badge-secondary\\\">{{sprint?.status}}</span></h4>\\n        <h5><span class=\\\"badge badge-info\\\">{{sprint?.startDate}} au {{sprint?.endDate}}</span></h5>\\n        <p>Nombre d'issues: <span class=\\\"badge badge-dark\\\">{{sprint?.issues.length}}</span></p>\\n        <p>Difficultés totales: <span class=\\\"badge badge-danger\\\">{{nbrDifficulte}}</span></p>\\n        <p>Difficultés résolues: <span class=\\\"badge badge-success\\\">{{nbrDifficulteRe}}</span></p>\\n    </div>\\n</div>\\n<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Issues</h5>\\n        <div class=\\\"form-group\\\">\\n            <ng-select (add)=\\\"onAdd($event)\\\" class=\\\"custom\\\" placeholder=\\\"+ Ajouter des issues\\\" [(ngModel)]=\\\"selectedItems\\\" [multiple]=\\\"true\\\">\\n                <ng-option *ngFor=\\\"let issue of issues\\\" [value]=\\\"issue?._id\\\" >{{issue?.issueID}} - {{issue?.description}}</ng-option>\\n            </ng-select>\\n        </div>\\n        <table class=\\\"table table-striped\\\">\\n            <caption>Liste des issues du sprint</caption>\\n            <thead class=\\\"thead\\\">\\n                <tr>\\n                    <th scope=\\\"col\\\">ID</th>\\n                    <th scope=\\\"col\\\">Description</th>\\n                    <th scope=\\\"col\\\">Priorité </th>\\n                    <th scope=\\\"col\\\">Difficulté </th>\\n                    <th scope=\\\"col\\\">Status </th>\\n                    <th scope=\\\"col\\\"></th>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr *ngFor=\\\"let issue of sprint?.issues\\\">\\n                    <td>#{{issue?.issueID}}</td>\\n                    <td style=\\\"width: 40%;\\\">{{issue?.description}}</td>\\n                    <td>{{issue?.priorite}}</td>\\n                    <td>{{issue?.difficulte}}</td>\\n                    <td>{{issue?.status}}</td>\\n\\n                    <td>\\n                        <button type=\\\"button\\\" (click)=\\\"updateModalEditIssue(issue)\\\" data-toggle=\\\"modal\\\"\\n                            data-target=\\\"#editIssueModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                        <button type=\\\"button\\\" (click)=\\\"removeIssueFromSprint(issue?._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                                class=\\\"fa fa-trash-o\\\"></em></button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"editIssueModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\naria-hidden=\\\"true\\\">\\n<div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer issue</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #editIssue=\\\"ngForm\\\" (ngSubmit)=\\\"editIssue.valid\\\">\\n                <div class=\\\"from row\\\">\\n                    <div class=\\\"form-group col-md-12\\\">\\n                        <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre issue\\\"\\n                            style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                            [(ngModel)]=\\\"modelIssueEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                    </div>\\n                </div>\\n                <div class=\\\"from row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"ID\\\" name=\\\"issueID\\\" id=\\\"issueID\\\"\\n                            rows=\\\"3\\\" [(ngModel)]=\\\"modelIssueEdit.issueID\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group col\\\">\\n                        <select class=\\\"custom-select\\\" id=\\\"priorite\\\" name=\\\"priorite\\\"\\n                            [(ngModel)]=\\\"modelIssueEdit.priorite\\\">\\n                            <option disabled value='0'>Priorité</option>\\n                            <option>Basse</option>\\n                            <option>Moyenne</option>\\n                            <option>Elevée</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group col\\\">\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Difficulté\\\" name=\\\"difficulte\\\"\\n                            id=\\\"difficulte\\\" rows=\\\"3\\\" [(ngModel)]=\\\"modelIssueEdit.difficulte\\\">\\n                    </div>\\n                    <div class=\\\"form-group col\\\">\\n                        <select (change)=\\\"ChangingValue($event)\\\" class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\"\\n                            [(ngModel)]=\\\"modelIssueEdit.status\\\" [value]='0'>\\n                            <option disabled value='0'>Status</option>\\n                            <option>En cours</option>\\n                            <option>Terminé</option>\\n                        </select>\\n\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n            <button type=\\\"button\\\" (click)=\\\"onSubmitEditIssue(editIssue)\\\" data-dismiss=\\\"modal\\\"\\n                class=\\\"btn btn-primary\\\">Confirmer</button>\\n        </div>\\n    </div>\\n</div>\\n</div>\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste de la documentation</h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"multiCollapseExample4\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"multiCollapseExample4\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <fieldset>\\n                <legend>Nouvelle documentation</legend>\\n                <form #newDocumentation=\\\"ngForm\\\" (ngSubmit)=\\\"newDocumentation.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelDocumentation.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre documentation\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelDocumentation.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">    \\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Link\\\" name=\\\"link\\\" id=\\\"link\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelDocumentation.link\\\">\\n                        </div>\\n                    </div>        \\n                       \\n\\n                  \\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitDocumentation(newDocumentation)\\\" data-toggle=\\\"collapse\\\"\\n                        href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n                        aria-controls=\\\"multiCollapseExample4\\\">Confirmer</a>\\n                </form>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste de la documentation</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">Description</th>    \\n            <th scope=\\\"col\\\">Lien</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let documentation of documentations\\\">\\n            <td>{{documentation?.title}}</td>\\n            <td style=\\\"width: 40%;\\\">{{documentation?.description}}</td>\\n            <td>{{documentation?.link}}</td>\\n\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditDocumentation(documentation)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editDocumentationModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeDocumentation(documentation._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"editDocumentationModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer documentation</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editDocumentation=\\\"ngForm\\\" (ngSubmit)=\\\"editDocumentation.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelDocumentationEdit.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre documentation\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelDocumentationEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n               \\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Link\\\" name=\\\"link\\\" id=\\\"link\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelDocumentationEdit.link\\\">\\n                        </div>\\n                        \\n\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditDocumentation(editDocumentation)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste des issues</h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#addIssue\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"addIssue\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"addIssue\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <fieldset>\\n                <legend>Nouvelle issue</legend>\\n                <form #newIssue=\\\"ngForm\\\" (ngSubmit)=\\\"newIssue.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre issue\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelIssue.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"ID\\\" name=\\\"issueID\\\" id=\\\"issueID\\\"\\n                                rows=\\\"3\\\" [(ngModel)]=\\\"modelIssue.issueID\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"priorite\\\" name=\\\"priorite\\\"\\n                                [(ngModel)]=\\\"modelIssue.priorite\\\">\\n                                <option disabled value=\\\"\\\">Priorité</option>\\n                                <option>Basse</option>\\n                                <option>Moyenne</option>\\n                                <option>Elevée</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Difficulté\\\" name=\\\"difficulte\\\"\\n                                id=\\\"difficulte\\\" rows=\\\"3\\\" [(ngModel)]=\\\"modelIssue.difficulte\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <select (change)=\\\"ChangingValue($event)\\\" class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\"\\n                                [(ngModel)]=\\\"modelIssue.status\\\" [value]='0'>\\n                                <option disabled value='0'>Status</option>\\n                                <option>En cours</option>\\n                                <option>Terminé</option>\\n                            </select>\\n\\n                        </div>\\n                    </div>\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitIssue(newIssue)\\\" data-toggle=\\\"collapse\\\" href=\\\"#addIssue\\\"\\n                        role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"addIssue\\\">Ajouter</a>\\n                </form>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"form-group col-md-3\\\">\\n        <ng-select (change)=\\\"sort($event)\\\" (clear)=\\\"getIssues()\\\" [searchable]=\\\"false\\\" class=\\\"custom\\\" [(ngModel)]=\\\"selectedItem\\\" placeholder=\\\"Trier par\\\">\\n            <ng-option [value]=\\\"issueID\\\" >ID</ng-option>\\n            <ng-option [value]=\\\"priorite\\\">Priorité</ng-option>\\n            <ng-option [value]=\\\"difficulte\\\">Difficulté</ng-option>\\n        </ng-select>\\n    </div>\\n</div>\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste des issues</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">ID</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Priorité </th>\\n            <th scope=\\\"col\\\">Difficulté </th>\\n            <th scope=\\\"col\\\">Status </th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let issue of issues\\\">\\n            <td>#{{issue?.issueID}}</td>\\n            <td style=\\\"width: 40%;\\\">{{issue?.description}}</td>\\n            <td>{{issue?.priorite}}</td>\\n            <td>{{issue?.difficulte}}</td>\\n            <td>{{issue?.status}}</td>\\n\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditIssue(issue)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editIssueModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeIssue(issue._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"modal fade\\\" id=\\\"editIssueModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer issue</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editIssue=\\\"ngForm\\\" (ngSubmit)=\\\"editIssue.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre issue\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelIssueEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"ID\\\" name=\\\"issueID\\\" id=\\\"issueID\\\"\\n                                rows=\\\"3\\\" [(ngModel)]=\\\"modelIssueEdit.issueID\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"priorite\\\" name=\\\"priorite\\\"\\n                                [(ngModel)]=\\\"modelIssueEdit.priorite\\\">\\n                                <option disabled value='0'>Priorité</option>\\n                                <option>Basse</option>\\n                                <option>Moyenne</option>\\n                                <option>Elevée</option>\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Difficulté\\\" name=\\\"difficulte\\\"\\n                                id=\\\"difficulte\\\" rows=\\\"3\\\" [(ngModel)]=\\\"modelIssueEdit.difficulte\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <select (change)=\\\"ChangingValue($event)\\\" class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\"\\n                                [(ngModel)]=\\\"modelIssueEdit.status\\\" [value]='0'>\\n                                <option disabled value='0'>Status</option>\\n                                <option>En cours</option>\\n                                <option>Terminé</option>\\n                            </select>\\n\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditIssue(editIssue)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste des releases</h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"multiCollapseExample4\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"multiCollapseExample4\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <fieldset>\\n                <legend>Nouvelle release</legend>\\n                <form #newRelease=\\\"ngForm\\\" (ngSubmit)=\\\"newRelease.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelRelease.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre release\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelRelease.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Version\\\" name=\\\"version\\\" id=\\\"version\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelRelease.version\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date\\\" name=\\\"date\\\"\\n                                    [(ngModel)]=\\\"modelRelease.date\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\"\\n                                        (click)=\\\"d.toggle()\\\" type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"sprintNumber\\\" name=\\\"sprintNumber\\\"\\n                                [(ngModel)]=\\\"modelRelease.sprintNumber\\\">\\n                                <option disabled value='0'>Choisir le sprint</option>\\n                                <option [value]='sprint?.title' *ngFor=\\\"let sprint of sprints\\\">\\n                                    {{sprint?.title}}\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Link\\\" name=\\\"link\\\" id=\\\"link\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelRelease.link\\\">\\n                        </div>\\n                    </div>\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitRelease(newRelease)\\\" data-toggle=\\\"collapse\\\"\\n                        href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n                        aria-controls=\\\"multiCollapseExample4\\\">Confirmer</a>\\n                </form>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste des Releases</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Version</th>\\n            <th scope=\\\"col\\\">Date</th>\\n            <th scope=\\\"col\\\">Sprint</th>\\n            <th scope=\\\"col\\\">Lien</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let release of releases\\\">\\n            <td>{{release?.title}}</td>\\n            <td style=\\\"width: 40%;\\\">{{release?.description}}</td>\\n            <td>{{release?.version}}</td>\\n            <td>{{release?.date}}</td>\\n            <td>{{release?.sprintNumber}}</td>\\n            <td>\\n                <a href={{release?.link}}>{{release?.link}}</a>\\n            </td>\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditRelease(release)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editReleaseModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeRelease(release._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"editReleaseModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer release</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editRelease=\\\"ngForm\\\" (ngSubmit)=\\\"editRelease.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelReleaseEdit.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre release\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelReleaseEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Version\\\" name=\\\"version\\\" id=\\\"version\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelReleaseEdit.version\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date\\\" name=\\\"date\\\"\\n                                    [(ngModel)]=\\\"modelReleaseEdit.date\\\" ngbDatepicker #dedit=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\"\\n                                        (click)=\\\"dedit.toggle()\\\" type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Link\\\" name=\\\"link\\\" id=\\\"link\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelReleaseEdit.link\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"sprintNumber\\\" name=\\\"sprintNumber\\\"\\n                                [(ngModel)]=\\\"modelReleaseEdit.sprintNumber\\\">\\n                                <option disabled value='0'>Choisir le sprint</option>\\n                                <option [value]='sprint?.title' *ngFor=\\\"let sprint of sprints\\\">\\n                                    {{sprint?.title}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditRelease(editRelease)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste des sprints</h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#multiCollapseExample3\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"multiCollapseExample3\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"multiCollapseExample3\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <fieldset>\\n                <legend>Nouveau sprint</legend>\\n                <form #newSprint=\\\"ngForm\\\" (ngSubmit)=\\\"newSprint.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelSprint.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date du début\\\" name=\\\"dp1\\\"\\n                                    [(ngModel)]=\\\"modelSprint.startDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\" (click)=\\\"d.toggle()\\\"\\n                                        type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date de fin\\\" name=\\\"dp2\\\"\\n                                    [(ngModel)]=\\\"modelSprint.endDate\\\" ngbDatepicker #dd=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\" (click)=\\\"dd.toggle()\\\"\\n                                        type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"modelSprint.status\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Statut</option>\\n                                <option>En cours</option>\\n                                <option>Terminé</option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitSprint(newSprint)\\\" data-toggle=\\\"collapse\\\"\\n                        href=\\\"#multiCollapseExample3\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n                        aria-controls=\\\"multiCollapseExample3\\\">Confirmer</a>\\n\\n\\n\\n\\n                </form>\\n\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste des sprints</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">Période</th>\\n            <th scope=\\\"col\\\">Statut</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let sprint of sprints\\\">\\n\\n            <td><a routerLink={{sprint?._id}}>{{sprint?.title}}</a></td>\\n            <td>{{sprint?.startDate}} - {{sprint?.endDate}}</td>\\n            <td>{{sprint?.status}}</td>\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditSprint(sprint)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editSprintModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeSprint(sprint._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"editSprintModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer sprint</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editSprint=\\\"ngForm\\\" (ngSubmit)=\\\"newSprint.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelSprintEdit.title\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date de début\\\" name=\\\"dp1\\\"\\n                                    [(ngModel)]=\\\"modelSprintEdit.startDate\\\" ngbDatepicker #ddedit=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\" (click)=\\\"ddedit.toggle()\\\"\\n                                        type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date de fin\\\" name=\\\"dp2\\\"\\n                                    [(ngModel)]=\\\"modelSprintEdit.endDate\\\" ngbDatepicker #ddedit2=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\" (click)=\\\"ddedit2.toggle()\\\"\\n                                        type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"modelSprintEdit.status\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Statut</option>\\n                                <option>En cours</option>\\n                                <option>Terminé</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditSprint(editSprint)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste des tâches</h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#multiCollapseExample2\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"multiCollapseExample2\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"multiCollapseExample2\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <fieldset>\\n                <legend>Nouvelle tâche</legend>\\n                <form #newTask=\\\"ngForm\\\" (ngSubmit)=\\\"newTask.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <ng-select name=\\\"issues\\\" placeholder=\\\"+ Ajouter des issues\\\" [(ngModel)]=\\\"modelTask.issue\\\"\\n                                [multiple]=\\\"true\\\">\\n                                <ng-option *ngFor=\\\"let issue of issues\\\" [value]=\\\"issue?.issueID\\\">{{issue?.issueID}} -\\n                                    {{issue?.description}}</ng-option>\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre tâche\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelTask.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Côut\\\" name=\\\"cout\\\" id=\\\"cout\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelTask.cout\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <ng-select class=\\\"custom\\\" placeholder=\\\"Choisir le développeur\\\"\\n                                [(ngModel)]=\\\"modelTask.developer\\\" name=\\\"developer\\\">\\n                                <ng-option *ngFor=\\\"let contributor of contributors\\\" [value]=\\\"contributor?.name\\\">\\n                                    {{contributor?.name}} /\\n                                    {{contributor?.email}}</ng-option>\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitTask(newTask)\\\" data-toggle=\\\"collapse\\\"\\n                        href=\\\"#multiCollapseExample2\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n                        aria-controls=\\\"multiCollapseExample2\\\">Confirmer</a>\\n                </form>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste des tâches</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Issues</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Coût</th>\\n            <th scope=\\\"col\\\">Développeur</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let task of tasks\\\">\\n            <td>\\n                <p *ngFor=\\\"let issue of task?.idIssues\\\"><span class=\\\"badge badge-pill badge-primary\\\">US\\n                        {{issue}}</span></p>\\n            </td>\\n            <td style=\\\"width: 40%;\\\">{{task?.description}}</td>\\n            <td>{{task?.cout}}</td>\\n            <td>{{task?.developer}}</td>\\n\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditTask(task)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editTaskModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeTask(task._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"editTaskModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer tâche</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editTask=\\\"ngForm\\\" (ngSubmit)=\\\"editTask.valid\\\">\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <ng-select name=\\\"issues\\\" placeholder=\\\"+ Ajouter des issues\\\"\\n                                [(ngModel)]=\\\"modelTaskEdit.issue\\\" bindLabel=\\\"idIssue\\\" bindValue=\\\"idIssue\\\"\\n                                [multiple]=\\\"true\\\">\\n                                <ng-option *ngFor=\\\"let issue of issues\\\" [value]=\\\"issue?.issueID\\\">{{issue?.issueID}} -\\n                                    {{issue?.description}}</ng-option>\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre tâche\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelTaskEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Côut\\\" name=\\\"cout\\\" id=\\\"cout\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelTaskEdit.cout\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <ng-select class=\\\"custom\\\" placeholder=\\\"Choisir le développeur\\\"\\n                                [(ngModel)]=\\\"modelTaskEdit.developer\\\" name=\\\"developer\\\">\\n                                <ng-option *ngFor=\\\"let contributor of contributors\\\" [value]=\\\"contributor?.name\\\">\\n                                    {{contributor?.name}} /\\n                                    {{contributor?.email}}</ng-option>\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditTask(editTask)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Liste des tests <span class=\\\"badge badge-pill badge-dark\\\">Waiting {{notYet}}</span>\\n        <span class=\\\"badge badge-pill badge-success\\\">Passed {{nbrPass}}</span>\\n        <span class=\\\"badge badge-pill badge-danger\\\">Failed {{nbrFailed}}</span></h5>\\n    <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"multiCollapseExample4\\\">Ajouter <em class=\\\"fa fa-plus\\\"></em></a>\\n</div>\\n<div class=\\\"collapse multi-collapse\\\" id=\\\"multiCollapseExample4\\\">\\n    <div class=\\\"card card-body\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <fieldset>\\n                <legend>Nouveau test</legend>\\n                <form #newTest=\\\"ngForm\\\" (ngSubmit)=\\\"newTest.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelTest.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre test\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelTest.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"modelTest.type\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Type</option>\\n                                <option>Test unitaire</option>\\n                                <option>Test d'intégration</option>\\n                                <option>Test de validation</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date\\\" name=\\\"dp\\\" [(ngModel)]=\\\"modelTest.date\\\"\\n                                    ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\"\\n                                        (click)=\\\"d.toggle()\\\" type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Lien\\\" name=\\\"Lien\\\" id=\\\"lien\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelTest.link\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"modelTest.status\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Statut</option>\\n                                <option>En cours</option>\\n                                <option>Echoué</option>\\n                                <option>Passé</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"onSubmitTest(newTest)\\\" data-toggle=\\\"collapse\\\"\\n                        href=\\\"#multiCollapseExample4\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n                        aria-controls=\\\"multiCollapseExample4\\\">Confirmer</a>\\n                </form>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"form-group col-md-3\\\">\\n        <ng-select (change)=\\\"filter($event)\\\" (clear)=\\\"getTests()\\\" [searchable]=\\\"false\\\" class=\\\"custom\\\"\\n            [(ngModel)]=\\\"selectedItem\\\" placeholder=\\\"Filtrer par status\\\">\\n            <ng-option>En cours</ng-option>\\n            <ng-option>Passé</ng-option>\\n            <ng-option>Echoué</ng-option>\\n        </ng-select>\\n    </div>\\n</div>\\n<table class=\\\"table table-striped\\\">\\n    <caption>Liste des tests</caption>\\n    <thead class=\\\"thead\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Type</th>\\n            <th scope=\\\"col\\\">Date</th>\\n            <th scope=\\\"col\\\">Lien</th>\\n            <th scope=\\\"col\\\">Statut</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let test of tests\\\"\\n            [ngStyle]=\\\"{'color':test?.status === 'En cours' ? 'black' : test?.status === 'Echoué' ? 'red' : 'green' }\\\">\\n            <td>{{test?.title}}</td>\\n            <td style=\\\"width: 40%;\\\">{{test?.description}}</td>\\n            <td>{{test?.type}}</td>\\n            <td>{{test?.date}}</td>\\n            <td><a style=\\\"text-decoration: none;color: inherit;\\\" href=\\\"{{test?.link}}\\\">Fichier test</a></td>\\n            <td *ngIf=\\\"test?.status === 'Echoué'\\\"><span class=\\\"badge badge-pill badge-danger\\\">Failed</span></td>\\n            <td *ngIf=\\\"test?.status === 'Passé'\\\"><span class=\\\"badge badge-pill badge-success\\\">Passed</span></td>\\n            <td *ngIf=\\\"test?.status === 'En cours'\\\"><span class=\\\"badge badge-pill badge-dark\\\">Not yet</span></td>\\n            <td>\\n                <button type=\\\"button\\\" (click)=\\\"updateModalEditTest(test)\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#editTestModal\\\" class=\\\"btn btn-info\\\"><em class=\\\"fa fa-edit\\\"></em></button>&nbsp;\\n                <button type=\\\"button\\\" (click)=\\\"removeTest(test._id)\\\" class=\\\"btn btn-danger\\\"><em\\n                        class=\\\"fa fa-trash-o\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"editTestModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Editer test</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #editTest=\\\"ngForm\\\" (ngSubmit)=\\\"editTest.valid\\\">\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\" name=\\\"title\\\" id=\\\"title\\\"\\n                                rows=\\\"1\\\" [(ngModel)]=\\\"modelTestEdit.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <textarea class=\\\"form-control\\\" placeholder=\\\"Décrire votre test\\\"\\n                                style=\\\"width: 100%;resize: none;\\\" id=\\\"description\\\" name=\\\"description\\\"\\n                                [(ngModel)]=\\\"modelTestEdit.description\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n\\n                        <div class=\\\"form-group col\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"modelTestEdit.type\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Type</option>\\n                                <option>Test unitaire</option>\\n                                <option>Test d'intégration</option>\\n                                <option>Test de validation</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Date\\\" name=\\\"dp\\\"\\n                                    [(ngModel)]=\\\"modelTestEdit.date\\\" ngbDatepicker #dedit=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar fa fa-calendar\\\"\\n                                        (click)=\\\"dedit.toggle()\\\" type=\\\"button\\\"></button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"from row\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Lien\\\" name=\\\"Lien\\\" id=\\\"lien\\\" rows=\\\"3\\\"\\n                                [(ngModel)]=\\\"modelTestEdit.link\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <select class=\\\"custom-select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"modelTestEdit.status\\\"\\n                                [value]='0'>\\n                                <option disabled value='0'>Statut</option>\\n                                <option>En cours</option>\\n                                <option>Echoué</option>\\n                                <option>Passé</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Annuler</button>\\n                <button type=\\\"button\\\" (click)=\\\"onSubmitEditTest(editTest)\\\" data-dismiss=\\\"modal\\\"\\n                    class=\\\"btn btn-primary\\\">Confirmer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-title\\\">Mes projets</h3>\\n        <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#addproject\\\" role=\\\"button\\\"\\n            aria-expanded=\\\"false\\\" aria-controls=\\\"addproject\\\">Nouveau projet<em class=\\\"fa fa-plus\\\" style=\\\"padding-left: 10px;\\\"></em></a>\\n    </div>\\n    <div class=\\\"collapse multi-collapse\\\" id=\\\"addproject\\\">\\n        <div class=\\\"card card-body\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <fieldset>\\n                    <form #newProject=\\\"ngForm\\\" (ngSubmit)=\\\"newProject.valid\\\">\\n                        <legend>Nouveau projet</legend>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"title\\\">Titre</label>\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"title\\\" [(ngModel)]=\\\"model.title\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" rows=\\\"3\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n                        </div>\\n                        <a class=\\\"btn btn-success\\\" data-toggle=\\\"collapse\\\" href=\\\"#addproject\\\" role=\\\"button\\\"\\n                            (click)=\\\"onSubmit(newProject)\\\" aria-expanded=\\\"false\\\"\\n                            aria-controls=\\\"editproject\\\">Confirmer</a>\\n                    </form>\\n                </fieldset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<table class=\\\"table\\\">\\n    <caption>Liste des projets</caption>\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Manager</th>\\n            <th scope=\\\"col\\\">Status</th>\\n            <th scope=\\\"col\\\"></th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let project of projects.result\\\">\\n            <td><a routerLink={{project?._id}}>{{project?.title}}</a></td>\\n            <td>{{project?.description}}</td>\\n            <td>{{project?.creator?.name}}</td>\\n            <td>{{project?.status}}</td>\\n            <td *ngIf=\\\"project?.creator?._id === projects?.idlogged\\\">\\n                <button type=\\\"button\\\" (click)=\\\"removeProject(project._id)\\\" class=\\\"btn btn-danger\\\"><em class=\\\"fa fa-trash\\\"></em></button>\\n            </td>\\n            <td *ngIf=\\\"project?.creator?._id !== projects?.idlogged\\\">\\n                <button type=\\\"button\\\" (click)=\\\"removeContributor(project._id,projects?.idlogged)\\\" class=\\\"btn btn-danger\\\">Quitter <em class=\\\"fa fa-user-times\\\"></em></button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\"","export default \"<div class=\\\"col-md-6\\\">\\n  <h3 class=\\\"card-title\\\">Modifier mes informations</h3>\\n  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"editForm.valid\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Adresse email:</label>\\n      <input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n      [(ngModel)]=\\\"this.userService.user.email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Nom:</label>\\n      <input placeholder=\\\"Nom\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\"\\n      [(ngModel)]=\\\"this.userService.user.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Mot de passe:</label>\\n      <input type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n      [(ngModel)]=\\\"this.userService.user.password\\\">\\n    </div>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onSubmit(editForm)\\\">Appliquer</button>\\n  </form>\\n</div>\"","export default \"<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginForm.valid && onSubmit(loginForm)\\\">\\n    <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" [pattern]=\\\"emailRegex\\\"\\n        [ngClass]=\\\"{'invalid-textbox' :loginForm.submitted && !email.valid}\\\" name=\\\"email\\\"\\n        placeholder=\\\"Entrez votre email\\\" required>\\n    <div *ngIf=\\\"loginForm.submitted && email.errors?.pattern\\\">\\n        <label class=\\\"validation-message\\\">L'adresse mail n'est pas valide</label>\\n    </div>\\n    <input type=\\\"password\\\" minlength=\\\"8\\\" #password=\\\"ngModel\\\"\\n        [ngClass]=\\\"{'invalid-textbox' :loginForm.submitted && !password.valid}\\\" [(ngModel)]=\\\"model.password\\\"\\n        name=\\\"password\\\" placeholder=\\\"Entrez votre mot de passe\\\" required>\\n    <div *ngIf=\\\"loginForm.submitted && password.errors?.minlength\\\">\\n        <label class=\\\"validation-message\\\">Le mot de passe doit contenir au moins 8 caractères</label>\\n    </div>\\n    <input type=\\\"submit\\\" id=\\\"submit\\\" value=\\\"Se connecter\\\">\\n</form>\\n\\n<div class=\\\"alertt\\\" *ngIf=\\\"errormessage\\\">\\n    {{ errormessage }}\\n</div>\\n\\n\"","export default \"<form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\n    <input type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"this.userService.user.name\\\" name=\\\"name\\\"\\n        placeholder=\\\"Nom\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !name.valid }\\\">\\n    <div *ngIf=\\\"signUpForm.submitted && !name.valid\\\">\\n        <label class=\\\"validation-message\\\">Ce champs est obligatoire.</label>\\n    </div>\\n    <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"this.userService.user.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\"\\n        required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\n    <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\n        <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">Ce champs est obligatoire.</label>\\n        <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">L'adresse mail n'est pas valide.</label>\\n    </div>\\n    <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"this.userService.user.password\\\" name=\\\"password\\\"\\n        placeholder=\\\"Mot de passe\\\" minlength=\\\"8\\\" required\\n        [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\n    <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\n        <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">Ce champs est obligatoire.</label>\\n        <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Le mot de passe doit contenir au moins 8 caractères.</label>\\n    </div>\\n    <input type=\\\"submit\\\" id=\\\"submit\\\" value=\\\"Sign Up\\\">\\n</form>\\n\\n<!-- Success message -->\\n<div class=\\\"success\\\" *ngIf=\\\"successmessage\\\">\\n    Inscription réussie\\n</div>\\n\\n<!-- Error message -->\\n<div class=\\\"alertt\\\" *ngIf=\\\"errormessage\\\">\\n    {{errormessage}}\\n</div>\"","export default \"<div class=\\\"wrapper\\\">\\n  <div id=\\\"formContent\\\">\\n    <h2 class=\\\"underlineHover\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"> Se connecter </h2>\\n    <h2 class=\\\"underlineHover\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\"> S'inscrire </h2>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './components/user/user.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ListprojetsComponent } from './components/dashboard/listprojets/listprojets.component';\nimport { DetailprojetComponent } from './components/dashboard/detailprojet/detailprojet.component';\nimport { IssueComponent } from './components/dashboard/detailprojet/issue/issue.component';\nimport { TaskComponent } from './components/dashboard/detailprojet/task/task.component';\nimport { SprintComponent } from './components/dashboard/detailprojet/sprint/sprint.component';\nimport { DetailsprintComponent } from './components/dashboard/detailprojet/detailsprint/detailsprint.component';\nimport { TestComponent } from './components/dashboard/detailprojet/test/test.component';\nimport { UserdetailComponent } from './components/dashboard/userdetail/userdetail.component';\nimport { ReleaseComponent } from './components/dashboard/detailprojet/release/release.component';\nimport { DocumentationComponent } from './components/dashboard/detailprojet/documentation/documentation.component';\nimport { ContributorComponent } from './components/dashboard/detailprojet/contributor/contributor.component';\nimport { AcceptComponent } from './components/accept/accept.component';\nconst routes: Routes = [\n  {\n    path: 'accept', component: AcceptComponent\n  },\n  {\n    path: 'register', component: UserComponent,\n    children: [{\n      path: '', component: RegisterComponent\n    }]\n  },\n  {\n    path: 'login', component: UserComponent,\n    children: [{\n      path: '', component: LoginComponent,canActivate: [AuthGuard]\n    }]\n  },\n  {\n    path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'projects', pathMatch: 'full' },\n      { path: 'projects', component: ListprojetsComponent, pathMatch: 'full' },\n      { path: 'userdetail', component: UserdetailComponent },\n\n      {\n        path: 'projects/:id', component: DetailprojetComponent, children: [\n          { path: '', redirectTo: 'issues', pathMatch: 'full' },\n          { path: 'contributors', component: ContributorComponent },\n          { path: 'issues', component: IssueComponent },\n          { path: 'tasks', component: TaskComponent },\n          { path: 'tests', component: TestComponent },\n          { path: 'sprints', component: SprintComponent },\n          { path: 'sprints/:idSprint', component: DetailsprintComponent },\n          { path: 'releases', component: ReleaseComponent },\n          { path: 'documentations', component: DocumentationComponent }\n\n\n        ]\n\n      }\n\n    ]\n\n  },\n  {\n    path: '', redirectTo: 'dashboard', pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'front-cdp2019-grp2-eq3';\n  url;\n  constructor(userService: UserService, activated: ActivatedRoute,router: Router) {\n    if (window.location.href.includes('login') && userService.getIDOflogged() !== undefined) {\n      router.navigate(['dashboard']);\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { UserService } from './services/user.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ListprojetsComponent } from './components/dashboard/listprojets/listprojets.component';\nimport { DetailprojetComponent } from './components/dashboard/detailprojet/detailprojet.component';\nimport { ProjetService } from './services/projet.service';\nimport { IssuesService } from './services/issues.service';\nimport { IssueComponent } from './components/dashboard/detailprojet/issue/issue.component';\nimport { TaskComponent } from './components/dashboard/detailprojet/task/task.component';\nimport { SprintComponent } from './components/dashboard/detailprojet/sprint/sprint.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DetailsprintComponent } from './components/dashboard/detailprojet/detailsprint/detailsprint.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TestComponent } from './components/dashboard/detailprojet/test/test.component';\nimport { UserdetailComponent } from './components/dashboard/userdetail/userdetail.component';\nimport { ReleaseComponent } from './components/dashboard/detailprojet/release/release.component';\nimport { DocumentationComponent } from './components/dashboard/detailprojet/documentation/documentation.component';\nimport { ContributorComponent } from './components/dashboard/detailprojet/contributor/contributor.component';\nimport { ContributorService } from './services/contributor.service';\nimport { AcceptComponent } from './components/accept/accept.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegisterComponent,\n    DashboardComponent,\n    LoginComponent,\n    ListprojetsComponent,\n    DetailprojetComponent,\n    IssueComponent,\n    TaskComponent,\n    SprintComponent,\n    DetailsprintComponent,\n    TestComponent,\n    UserdetailComponent,\n    ReleaseComponent,\n    DocumentationComponent,\n    ContributorComponent,\n    AcceptComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    NgSelectModule\n  ],\n  providers: [UserService, ProjetService, IssuesService, ContributorService, AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    return true;\n  }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\n\n\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor  {\n\n    constructor(private userService: UserService, private router: Router) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        req = req.clone({\n            withCredentials: true\n        });\n        return  next.handle(req).pipe(tap(\n                event => { },\n                err => {\n                    if (err.error.auth === false) {\n                        this.router.navigateByUrl('/login');\n                    }\n                }\n            )\n            );\n        }\n    }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjZXB0L2FjY2VwdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accept',\n  templateUrl: './accept.component.html',\n  styleUrls: ['./accept.component.scss']\n})\nexport class AcceptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n  userInfos;\n  constructor(private userService: UserService, private router: Router) { }\n\n  /**\n   * Initialize the Dashboard component.\n   */\n  ngOnInit() {\n    this.userService.getDashboard().subscribe(\n      res => {\n        const user = 'user';\n        this.userService.setToken(res[user]);\n        this.userInfos = res[user];\n      },\n      err => { }\n    );\n  }\n\n  /**\n   * Logout the current user.\n   */\n  logout() {\n    this.userService.logout().subscribe(\n      res => {\n        localStorage.removeItem('userinfos');\n        this.router.navigate(['login']);\n      },\n      err => { }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjetService } from 'src/app/services/projet.service';\nimport { ContributorService } from 'src/app/services/contributor.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-contributor',\n  templateUrl: './contributor.component.html',\n})\nexport class ContributorComponent implements OnInit {\n  projectId;\n  project;\n  contributors = [];\n  invitations = [];\n  waiting = false;\n  success = false;\n  users = [];\n  selectedUser;\n  idLogged;\n  isCreator = false;\n  constructor(private route: ActivatedRoute, private projectService: ProjetService,\n    private contributorService: ContributorService, private userService: UserService\n  ) { }\n\n\n  /**\n   * Initialization of contributor component.\n   */\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\n      const id = 'id';\n      this.projectId = params[id];\n      this.getContributors();\n      this.getInvitations();\n    });\n  }\n\n\n  /**\n   * Get the contributor list of the current project.\n   */\n  getContributors() {\n    this.projectService.getProject(this.projectId).subscribe(data => {\n      const project = 'project';\n      const id = '_id';\n      const contributors = 'contributors';\n      this.project = data[project];\n      this.idLogged = this.userService.getIDOflogged();\n      if (this.project.creator[id] === this.idLogged) {\n        this.isCreator = true;\n      }\n      this.contributors = this.project[contributors];\n      this.getUsers();\n    });\n\n  }\n\n  /**\n   * Get pending invitations for the current user and project.\n   */\n  getInvitations() {\n    this.contributorService.getInvitations(this.projectId).subscribe(data => {\n      this.invitations = data;\n    });\n  }\n\n  /**\n    * Get pending invitations for the current user and project.\n    */\n  deleteInvitation(id) {\n    this.contributorService.deleteInvitation(this.projectId, id).subscribe(data => this.getInvitations());\n  }\n\n  /**\n   * Get current project user list.\n   */\n  getUsers() {\n    const users = 'users';\n    const creator = 'creator';\n    this.userService.getUsers().subscribe(data => {\n      this.users = data[users].filter(item => !this.contributors.some(\n        d => d._id === item._id || item._id === this.project[creator]._id));\n    });\n\n  }\n\n\n  /**\n   * Invite a new contributor.\n   * @param $event invite event\n   */\n  onAdd($event) {\n    this.waiting = true;\n    this.contributorService.inviteContributor(this.projectId, $event).subscribe(\n      res => {\n        this.waiting = false;\n        this.success = true;\n        setTimeout(() => this.success = false, 2000);\n        this.getInvitations();\n        this.selectedUser = null;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a contributor from project\n   * @param id id of contributor\n   */\n  removeContributor(id) {\n    this.contributorService.removeContributor(this.projectId, id).subscribe(data => {\n      this.getContributors();\n      this.getUsers();\n      this.getInvitations();\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ProjetService } from 'src/app/services/projet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Projet } from 'src/app/models/projet.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-detailprojet',\n  templateUrl: './detailprojet.component.html'\n})\nexport class DetailprojetComponent implements OnInit {\n\n\n  public projectId;\n  public users = [];\n\n  public project: Projet;\n\n\n  constructor(\n    private projetService: ProjetService,\n    private userService: UserService,\n    private route: ActivatedRoute) { }\n\n  modelproject = {\n    title: '',\n    description: '',\n    status: ''\n  };\n  idLogged;\n  isCreator = false;\n\n  /**\n   * Initialize the detaiProjet component.\n   */\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.getProject();\n\n  }\n\n  /**\n   * Get the selected project.\n   */\n  getProject() {\n    this.projetService.getProject(this.projectId).subscribe(data => {\n      const project = 'project';\n      const id = '_id';\n      this.project = data[project];\n      this.idLogged = this.userService.getIDOflogged();\n      if (this.project.creator[id] === this.idLogged) {\n        this.isCreator = true;\n      } else {\n        this.isCreator = false;\n      }\n      this.modelproject.title = this.project.title;\n      this.modelproject.description = this.project.description;\n      this.modelproject.status = this.project.status;\n    });\n  }\n\n\n  /**\n   * Edit the selected project title and/or description form form info\n   * @param form the form containing the new title and description.\n   */\n  editProject(form: NgForm) {\n    if (form.value.title === '' || form.value.description === '') {\n      this.getProject();\n      return;\n    }\n    const id = '_id';\n    this.projetService.editProject(this.project[id], form.value).subscribe(\n      res => {\n        this.getProject();\n\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SprintService } from 'src/app/services/sprint.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IssuesService } from 'src/app/services/issues.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-detailsprint',\n  templateUrl: './detailsprint.component.html'\n})\n\n\nexport class DetailsprintComponent implements OnInit {\n  projectId;\n  sprintID;\n  nbrDifficulte = 0;\n  nbrDifficulteRe = 0;\n  sprint = {};\n  issues = [];\n  selectedItems;\n  modelIssueEdit = {\n    _id: '',\n    issueID: '',\n    description: '',\n    priorite: '',\n    difficulte: '0',\n    status: '0'\n  };\n  events: Event[] = [];\n  constructor(private sprintService: SprintService,\n              private issueService: IssuesService,\n              private route: ActivatedRoute) { }\n\n\n  /**\n   * Initialization of detailSprint component.\n   */\n  ngOnInit() {\n    this.getSprint();\n  }\n\n  /**\n   * Get selected sprint infos.\n   */\n  getSprint() {\n    this.route.parent.params.subscribe(params => {\n      const id = 'id';\n      this.projectId = params[id];\n    });\n    this.sprintID = this.route.snapshot.paramMap.get('idSprint');\n\n    this.sprintService.getSprint(this.projectId, this.sprintID).subscribe(data => {\n      const sprint = 'sprint';\n      const issues = 'issues';\n      this.sprint = data[sprint];\n\n\n      this.issueService.getIssues(this.projectId).subscribe(dataIssues => {\n\n        const res = dataIssues[issues].filter(item1 =>\n          !this.sprint[issues].some(item2 => (item2._id === item1._id)));\n        this.issues = res;\n        this.nbrDifficulte = 0;\n        this.nbrDifficulteRe = 0;\n        this.sprint[issues].forEach(e => {\n          this.nbrDifficulte = this.nbrDifficulte + parseInt(e.difficulte, 10);\n          if (e.status === 'Terminé') {\n            this.nbrDifficulteRe = this.nbrDifficulteRe + parseInt(e.difficulte, 10);\n          }\n        });\n      });\n    });\n\n\n  }\n\n  /**\n   * Add an issue to the sprint.\n   * @param $event Add event\n   */\n  onAdd($event) {\n    this.sprintService.addIssueSprint(this.projectId, this.sprintID, { idIssue: $event }).subscribe(\n      res => {\n        this.getSprint();\n        this.selectedItems = null;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Update the edit issue template.\n   * @param issue issue reference\n   */\n  updateModalEditIssue(issue) {\n    this.modelIssueEdit._id = issue._id;\n    this.modelIssueEdit.issueID = issue.issueID;\n    this.modelIssueEdit.description = issue.description;\n    this.modelIssueEdit.priorite = issue.priorite;\n    this.modelIssueEdit.difficulte = issue.difficulte;\n    this.modelIssueEdit.status = issue.status;\n  }\n\n  /**\n   * Edit an issue\n   * @param form form containing the issue infos.\n   */\n  onSubmitEditIssue(form: NgForm) {\n    this.issueService.editIssue(this.projectId, this.modelIssueEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getSprint();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove an issue from the sprint.\n   * @param issueId id of issue to remove\n   */\n  removeIssueFromSprint(issueId) {\n    this.sprintService.removeIssue(this.projectId, this.sprintID, issueId).subscribe(data => this.getSprint());\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { IssuesService } from 'src/app/services/issues.service';\nimport { DocumentationsService } from 'src/app/services/documentations.service';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html'\n})\nexport class DocumentationComponent implements OnInit {\n  projectId;\n  issues = [];\n  documentations = [];\n  modelDocumentation = {\n    title: '',\n    description: '',\n    link: ''\n  };\n\n  modelDocumentationEdit = {\n    _id: '',\n    title: '',\n    description: '',\n    link: ''\n  };\n\n\n  constructor(private documentationService: DocumentationsService, private issueService: IssuesService,\n              private route: ActivatedRoute) { }\n\n\n\n  /**\n   * Initialization of documentation component.\n   */\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\n      const id = 'id';\n      this.projectId = params[id];\n    });\n    this.getDocumentations();\n    this.getIssues();\n  }\n\n  /**\n   * Get the current project issue list.\n   */\n  getIssues() {\n    const issues = 'issues';\n    this.issueService.getIssues(this.projectId).subscribe(data => this.issues = data[issues]);\n  }\n\n  /**\n   * Get the current project documentation list.\n   */\n  getDocumentations() {\n    const documentations = 'documentations';\n    this.documentationService.getDocumentations(this.projectId).subscribe(data => this.documentations = data[documentations]);\n  }\n\n\n  /**\n   * Add documentation from form info\n   * @param form the form containing the documentation info\n   */\n  onSubmitDocumentation(form: NgForm) {\n    this.documentationService.addDocumentation(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getDocumentations();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a documentation reference\n   * @param id id of the documentation reference\n   */\n  removeDocumentation(id) {\n    this.documentationService.removeDocumentation(this.projectId, id).subscribe(data => this.getDocumentations());\n  }\n\n  /**\n   * Update the edit documentation form with the documentation info\n   * @param documentation documentation info\n   */\n  updateModalEditDocumentation(documentation) {\n    this.modelDocumentationEdit._id = documentation._id;\n    this.modelDocumentationEdit.title = documentation.title;\n    this.modelDocumentationEdit.description = documentation.description;\n    this.modelDocumentationEdit.link = documentation.link;\n  }\n\n\n  /**\n   * Edit documentation from form info\n   * @param form the form containing documentation info\n   */\n  onSubmitEditDocumentation(form: NgForm) {\n    this.documentationService.editDocumentation(this.projectId, this.modelDocumentationEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getDocumentations();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IssuesService } from 'src/app/services/issues.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Issues } from 'src/app/models/issues.model';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html'\n})\nexport class IssueComponent implements OnInit {\n  projectId;\n  issues = [];\n  selectedItem;\n  modelIssue: Issues = {\n    issueID: '',\n    description: '',\n    priorite: '',\n    difficulte: '',\n    status: '0'\n  };\n\n  modelIssueEdit = {\n    _id: '',\n    issueID: '',\n    description: '',\n    priorite: '',\n    difficulte: '0',\n    status: '0'\n  };\n  constructor(private issueService: IssuesService, private route: ActivatedRoute) { }\n\n\n  /**\n   * Initialize issue component.\n   */\n  ngOnInit() {\n    const id = 'id';\n    this.route.parent.params.subscribe(params => {\n      this.projectId = params[id];\n    });\n    this.getIssues();\n  }\n\n  /**\n   * Get the current project issue list\n   */\n  getIssues() {\n    const issues = 'issues';\n    this.issueService.getIssues(this.projectId).subscribe(data => this.issues = data[issues]);\n  }\n\n\n  /**\n   * Add an issue from form info\n   * @param form form containing the issue info\n   */\n  onSubmitIssue(form: NgForm) {\n    this.issueService.addIssue(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.modelIssue.status = '0';\n        this.modelIssue.difficulte = '0';\n        this.getIssues();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove an issue\n   * @param id id of the issue to remove\n   */\n  removeIssue(id) {\n    this.issueService.removeIssue(this.projectId, id).subscribe(data => this.getIssues());\n  }\n\n  /**\n   * Update issue edit form from issue info\n   * @param issue issue info\n   */\n  updateModalEditIssue(issue) {\n    this.modelIssueEdit._id = issue._id;\n    this.modelIssueEdit.issueID = issue.issueID;\n    this.modelIssueEdit.description = issue.description;\n    this.modelIssueEdit.priorite = issue.priorite;\n    this.modelIssueEdit.difficulte = issue.difficulte;\n    this.modelIssueEdit.status = issue.status;\n  }\n\n  /**\n   * Edit an issue from form info\n   * @param form form containing the issue info\n   */\n  onSubmitEditIssue(form: NgForm) {\n    this.issueService.editIssue(this.projectId, this.modelIssueEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.selectedItem = null;\n        this.getIssues();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Sort issues by criteria : \"ID\", \"Priorité\" or \"Difficulté\".\n   * @param $event the criteria on which issues are sorted.\n   */\n  sort($event) {\n    if ($event !== undefined) {\n      const clicked = $event.$ngOptionLabel;\n      switch (clicked) {\n        case 'ID': {\n          this.issues = this.issues.sort((a, b) => parseInt(a.issueID, 10) - parseInt(b.issueID, 10));\n          break;\n        }\n        case 'Priorité': {\n          this.issues = this.issues.sort((a, b) => a.priorite.localeCompare(b.priorite));\n          break;\n        }\n        case 'Difficulté': {\n          this.issues = this.issues.sort((a, b) => parseInt(a.difficulte, 10) - parseInt(b.difficulte, 10));\n          break;\n        }\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { ReleasesService } from 'src/app/services/releases.service';\nimport { SprintService } from 'src/app/services/sprint.service';\nimport { IssuesService } from 'src/app/services/issues.service';\n\n@Component({\n  selector: 'app-release',\n  templateUrl: './release.component.html'\n})\nexport class ReleaseComponent implements OnInit {\n  projectId;\n  releases = [];\n  sprints = [];\n  issues = [];\n  modelRelease = {\n    title: '',\n    description: '',\n    version: '',\n    date: {},\n    sprintNumber: '0',\n    link: ''\n  };\n\n  modelReleaseEdit = {\n    _id: '',\n    title: '',\n    description: '',\n    version: '',\n    date: {},\n    sprintNumber: '',\n    link: ''\n  };\n\n  modelDate;\n\n  constructor(private releasesService: ReleasesService, private sprintService: SprintService, private issueService: IssuesService,\n              private route: ActivatedRoute,\n              private calendar: NgbCalendar) { }\n\n\n  /**\n   * Initialize the release component.\n   */\n  ngOnInit() {\n    const id = 'id';\n    this.route.parent.params.subscribe(params => {\n      this.projectId = params[id];\n    });\n    this.getReleases();\n    this.getSprints();\n    this.getIssues();\n\n    this.modelRelease.date = this.calendar.getToday();\n  }\n\n  /**\n   * Get the current project issue list.\n   */\n  getIssues() {\n    const issues = 'issues';\n    this.issueService.getIssues(this.projectId).subscribe(data => this.issues = data[issues]);\n  }\n\n  /**\n   * Get the current project release list.\n   */\n  getReleases() {\n    const releases = 'releases';\n    this.releasesService.getReleases(this.projectId).subscribe(data => this.releases = data[releases]);\n  }\n\n  /**\n   * Get the current project sprint list.\n   */\n  getSprints() {\n    const sprints = 'sprints';\n    this.sprintService.getSprints(this.projectId).subscribe(data => this.sprints = data[sprints]);\n  }\n\n  /**\n   * Add a release from form info.\n   * @param form form containing the release info.\n   */\n  onSubmitRelease(form: NgForm) {\n    const date = form.value.date;\n    form.value.date = date.day + '/' + date.month + '/' + date.year;\n    this.releasesService.addRelease(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getReleases();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a release from project.\n   * @param id id of release to remove.\n   */\n  removeRelease(id) {\n    this.releasesService.removeRelease(this.projectId, id).subscribe(data => this.getReleases());\n  }\n\n  /**\n   * Update release edit form from release info\n   * @param release release info\n   */\n  updateModalEditRelease(release) {\n    this.modelReleaseEdit._id = release._id;\n    this.modelReleaseEdit.title = release.title;\n    this.modelReleaseEdit.description = release.description;\n    this.modelReleaseEdit.version = release.version;\n    const tmpDate = release.date.split('/');\n    this.modelReleaseEdit.date = { year: parseInt(tmpDate[2], 10), month: parseInt(tmpDate[1], 10), day: parseInt(tmpDate[0], 10) };\n    this.modelReleaseEdit.sprintNumber = release.sprintNumber;\n    this.modelReleaseEdit.link = release.link;\n  }\n\n  /**\n   * Edit a release from form info\n   * @param form form containing the release info\n   */\n  onSubmitEditRelease(form: NgForm) {\n    const date = form.value.date;\n    form.value.date = date.day + '/' + date.month + '/' + date.year;\n    this.releasesService.editRelease(this.projectId, this.modelReleaseEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getReleases();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SprintService } from 'src/app/services/sprint.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-sprint',\n  templateUrl: './sprint.component.html'\n})\n\n\nexport class SprintComponent implements OnInit {\n  projectId;\n  sprints = [];\n  modelSprint = {\n    title: '',\n    startDate: {},\n    endDate: {},\n    status: '0',\n    issues: ''\n  };\n  modelSprintEdit = {\n    _id: '',\n    title: '',\n    startDate: {},\n    endDate: {},\n    status: '0',\n    issues: ''\n  };\n\n  modelDate;\n\n\n  constructor(private sprintService: SprintService, private route: ActivatedRoute, private calendar: NgbCalendar) { }\n\n  /**\n   * Initialize the sprint component.\n   */\n  ngOnInit() {\n    const id = 'id';\n    this.route.parent.params.subscribe(params => {\n      this.projectId = params[id];\n    });\n    this.getSprints();\n    this.modelSprint.startDate = this.calendar.getToday();\n    this.modelSprint.endDate = this.calendar.getToday();\n  }\n\n  /**\n   * Get the current project sprint list.\n   */\n  getSprints() {\n    const sprints = 'sprints';\n    this.sprintService.getSprints(this.projectId).subscribe(data => this.sprints = data[sprints]);\n  }\n\n  /**\n   * Add a sprint from form info.\n   * @param form form containing the sprint info.\n   */\n  onSubmitSprint(form: NgForm) {\n    const startDate = form.value.dp1;\n    const endDate = form.value.dp2;\n    form.value.dp1 = startDate.day + '/' + startDate.month + '/' + startDate.year;\n    form.value.dp2 = endDate.day + '/' + endDate.month + '/' + endDate.year;\n    console.log(form.value);\n    this.sprintService.addSprint(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.modelSprint.status = '0';\n        this.getSprints();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Update sprint edit form from sprint info\n   * @param sprint sprint info\n   */\n  updateModalEditSprint(sprint) {\n    this.modelSprintEdit._id = sprint._id;\n    this.modelSprintEdit.title = sprint.title;\n    const tmpDateStart = sprint.startDate.split('/');\n    this.modelSprintEdit.startDate = { year: parseInt(tmpDateStart[2], 10),\n                                      month: parseInt(tmpDateStart[1], 10),\n                                      day: parseInt(tmpDateStart[0], 10) };\n    const tmpDateEnd = sprint.endDate.split('/');\n    this.modelSprintEdit.endDate = { year: parseInt(tmpDateEnd[2], 10),\n                                    month: parseInt(tmpDateEnd[1], 10),\n                                    day: parseInt(tmpDateEnd[0], 10) };\n    this.modelSprintEdit.status = sprint.status;\n  }\n\n\n  /**\n   * Edit a sprint from form info\n   * @param form form containing the sprint info\n   */\n  onSubmitEditSprint(form: NgForm) {\n    const startDate = form.value.dp1;\n    const endDate = form.value.dp2;\n    form.value.dp1 = startDate.day + '/' + startDate.month + '/' + startDate.year;\n    form.value.dp2 = endDate.day + '/' + endDate.month + '/' + endDate.year;\n    this.sprintService.editSprint(this.projectId, this.modelSprintEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.modelSprintEdit.status = '0';\n        this.getSprints();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a sprint from project.\n   * @param id id of sprint to remove.\n   */\n  removeSprint(id) {\n    this.sprintService.removeSprint(this.projectId, id).subscribe(data => this.getSprints());\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TasksService } from 'src/app/services/tasks.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IssuesService } from 'src/app/services/issues.service';\nimport { ProjetService } from 'src/app/services/projet.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html'\n})\nexport class TaskComponent implements OnInit {\n  projectId;\n  tasks = [];\n  issues = [];\n  contributors = [];\n  modelTask = {\n    issue: [],\n    description: '',\n    cout: '',\n    developer: null\n  };\n  modelTaskEdit = {\n    _id: '',\n    issue: [],\n    description: '',\n    cout: '',\n    developer: null\n  };\n\n  constructor(private tasksService: TasksService, private issueService: IssuesService,\n              private projectService: ProjetService, private route: ActivatedRoute) { }\n\n\n  /**\n   * Initialize the task component.\n   */\n  ngOnInit() {\n    const id = 'id';\n    this.route.parent.params.subscribe(params => {\n      this.projectId = params[id];\n    });\n    this.getTasks();\n    this.getIssues();\n    this.getContributors();\n  }\n\n  /**\n   * Get the current project task list.\n   */\n  getTasks() {\n    const tasks = 'tasks';\n    this.tasksService.getTasks(this.projectId).subscribe(data => this.tasks = data[tasks]);\n  }\n\n  /**\n   * Get the current project issue list.\n   */\n  getIssues() {\n    const issues = 'issues';\n    this.issueService.getIssues(this.projectId).subscribe(data => this.issues = data[issues]);\n  }\n\n  /**\n   * Get the current project contributors list.\n   */\n  getContributors() {\n    const project = 'project';\n    const contributors = 'contributors';\n    this.projectService.getProject(this.projectId).subscribe(data => {\n      this.contributors = data[project][contributors];\n    });\n  }\n\n  /**\n   * Add a task from form info.\n   * @param form form containing the task info.\n   */\n  onSubmitTask(form: NgForm) {\n    this.tasksService.addTask(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.modelTask.developer = null;\n        this.modelTask.issue = null;\n        this.getTasks();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a task from project.\n   * @param id id of task to remove.\n   */\n  removeTask(id) {\n    this.tasksService.removeTask(this.projectId, id).subscribe(data => this.getTasks());\n  }\n\n  /**\n   * Update task edit form from task info\n   * @param task task info\n   */\n  updateModalEditTask(task) {\n    this.modelTaskEdit._id = task._id;\n    this.modelTaskEdit.cout = task.cout;\n    this.modelTaskEdit.description = task.description;\n    this.modelTaskEdit.developer = task.developer;\n    this.modelTaskEdit.issue = [];\n    task.idIssues.forEach(e => this.modelTaskEdit.issue.push(e));\n  }\n\n  /**\n   * Edit a task from form info\n   * @param form form containing the task info\n   */\n  onSubmitEditTask(form: NgForm) {\n    this.tasksService.editTask(this.projectId, this.modelTaskEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getTasks();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { TestsService } from 'src/app/services/tests.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html'\n})\nexport class TestComponent implements OnInit {\n  projectId;\n  tests = [];\n  selectedItem: any;\n  selectedItemType: any;\n  modelTest = {\n    title: '',\n    description: '',\n    type: '0',\n    date: {},\n    link: '',\n    status: '0'\n  };\n\n  modelTestEdit = {\n    _id: '',\n    title: '',\n    description: '',\n    type: '0',\n    date: {},\n    link: '',\n    status: '0'\n  };\n\n  modelDate;\n  nbrPass = 0;\n  nbrFailed = 0;\n  notYet = 0;\n\n  constructor(private testsService: TestsService,\n    private route: ActivatedRoute,\n    private calendar: NgbCalendar) { }\n\n  /**\n   * Initialize the test component.\n   */\n  ngOnInit() {\n    const id = 'id';\n    this.route.parent.params.subscribe(params => {\n      this.projectId = params[id];\n    });\n    this.getTests();\n    this.modelTest.date = this.calendar.getToday();\n  }\n\n  /**\n   * Get the current project test list.\n   */\n  getTests() {\n    const tests = 'tests';\n    this.testsService.getTests(this.projectId).subscribe(data => {\n      this.tests = data[tests];\n      this.nbrPass = 0;\n      this.nbrFailed = 0;\n      this.notYet = 0;\n      this.tests.forEach(e => {\n        if (e.status === 'Passé') {\n          this.nbrPass = this.nbrPass + 1;\n        } else if (e.status === 'En cours') {\n          this.notYet = this.notYet + 1;\n        } else if (e.status === 'Echoué') {\n          this.nbrFailed = this.nbrFailed + 1;\n        }\n      });\n    });\n  }\n\n  /**\n   * Add a test from form info.\n   * @param form form containing the test info.\n   */\n  onSubmitTest(form: NgForm) {\n    const date = form.value.dp;\n    form.value.dp = date.day + '/' + date.month + '/' + date.year;\n    this.testsService.addTest(this.projectId, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.modelTest.status = '0';\n        this.modelTest.type = '0';\n        this.getTests();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Remove a test from project.\n   * @param id id of test to remove.\n   */\n  removeTest(id) {\n    this.testsService.removeTest(this.projectId, id).subscribe(data => this.getTests());\n  }\n\n  /**\n   * Update test edit form from test info\n   * @param test test info\n   */\n  updateModalEditTest(test) {\n    this.modelTestEdit._id = test._id;\n    this.modelTestEdit.title = test.title;\n    this.modelTestEdit.description = test.description;\n    this.modelTestEdit.type = test.type;\n    const tmpDate = test.date.split('/');\n    this.modelTestEdit.date = { year: parseInt(tmpDate[2], 10), month: parseInt(tmpDate[1], 10), day: parseInt(tmpDate[0], 10) };\n    this.modelTestEdit.link = test.link;\n    this.modelTestEdit.status = test.status;\n  }\n\n  /**\n   * Edit a test from form info\n   * @param form form containing the test info\n   */\n  onSubmitEditTest(form: NgForm) {\n    const date = form.value.dp;\n    form.value.dp = date.day + '/' + date.month + '/' + date.year;\n    this.testsService.editTest(this.projectId, this.modelTestEdit._id, form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getTests();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Filter the list of tests by status\n   * @param $event is the selected status\n   */\n  filter($event) {\n    const tests = 'tests';\n    if ($event !== undefined) {\n      const clicked = $event.$ngOptionLabel;\n      switch (clicked) {\n        case 'En cours': {\n          this.testsService.getTests(this.projectId).subscribe(data => {\n            this.tests = data[tests].filter(test => test.status === 'En cours');\n          });\n          break;\n        }\n        case 'Passé': {\n          this.testsService.getTests(this.projectId).subscribe(data => {\n            this.tests = data[tests].filter(test => test.status === 'Passé');\n          });\n          break;\n        }\n        case 'Echoué': {\n          this.testsService.getTests(this.projectId).subscribe(data => {\n            this.tests = data[tests].filter(test => test.status === 'Echoué');\n          });\n          break;\n        }\n      }\n    }\n  }\n}\n","import { Component, OnInit} from '@angular/core';\nimport { ProjetService } from 'src/app/services/projet.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { ContributorService } from 'src/app/services/contributor.service';\n\n@Component({\n  selector: 'app-listprojets',\n  templateUrl: './listprojets.component.html'\n})\nexport class ListprojetsComponent implements OnInit {\n\n  public projects = [];\n\n  constructor(private projectsService: ProjetService,\n              private contributorService: ContributorService) { }\n\n  model = {\n    title: '',\n    description: ''\n  };\n\n  /**\n   * Initialize the listProjets component.\n   */\n  ngOnInit() {\n    this.getProjects();\n  }\n\n\n  /**\n   * Get the projects list.\n   */\n  getProjects() {\n    this.projectsService.getProjects().subscribe(data => this.projects = data);\n  }\n\n  /**\n   * Remove a project.\n   * @param id id of the project to remove.\n   */\n  removeProject(id) {\n    this.projectsService.deleteProject(id).subscribe(data => this.getProjects());\n  }\n\n\n  /**\n   * Create a new project from form info\n   * @param form form containing the new project info.\n   */\n  onSubmit(form: NgForm) {\n    this.projectsService.addProject(form.value).subscribe(\n      res => {\n        form.resetForm();\n        this.getProjects();\n      },\n      err => {\n        console.log(err);\n      }\n\n    );\n  }\n  removeContributor(idproject, idlogged) {\n    this.contributorService.removeContributor(idproject, idlogged).subscribe(data => {\n      this.getProjects();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../models/user.model';\nimport {FormBuilder, FormGroup, Validators, NgForm} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {UserService} from '../../../services/user.service';\n\n@Component({\n  selector: 'app-userdetail',\n  templateUrl: './userdetail.component.html'\n})\nexport class UserdetailComponent implements OnInit {\n\n  successmessage: boolean;\n  errormessage: string;\n  constructor(private userService: UserService) { }\n\n  /**\n   * Initialize the UserDetail component.\n   */\n  ngOnInit() {}\n\n\n  /**\n   * Edit the current user from form info.\n   * @param form form containing the user info.\n   */\n  onSubmit(form: NgForm) {\n    this.userService.editUser(form.value).subscribe(\n      res => {\n        this.successmessage = true;\n        setTimeout(() => this.successmessage = false, 4000);\n      },\n      err => {\n        if (err.status === 442) {\n          this.errormessage = err.error.join('<br/>');\n        } else {\n          this.errormessage = 'Une erreur est survenue dans le serveur';\n        }\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  model = {\n    email: '',\n    password: ''\n  };\n  errormessage: string;\n\n  /**\n   * Initialize the login component.\n   */\n  ngOnInit() {}\n\n  /**\n   * Login the user from form info.\n   * @param form form containing the login credentials.\n   */\n  onSubmit(form: NgForm) {\n    this.userService.login(form.value).subscribe(\n      res => {\n        this.router.navigateByUrl('/dashboard/projects');\n      },\n\n      err => {\n        this.errormessage = err.error.message;\n      }\n\n    );\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  successmessage: boolean;\n  errormessage: string;\n  constructor(private userService: UserService) { }\n\n  /**\n   * Initialize the register component.\n   */\n  ngOnInit() {}\n\n  /**\n   * Register a new user from form info.\n   * @param form form containing the new user credentials.\n   */\n  onSubmit(form: NgForm) {\n    this.userService.postUser(form.value).subscribe(\n      res => {\n        this.successmessage = true;\n        setTimeout(() => this.successmessage = false, 4000);\n        this.resetForm(form);\n      },\n      err => {\n        if (err.status === 442) {\n          this.errormessage = err.error.join('<br/>');\n        } else {\n          this.errormessage = 'Une erreur est survenue dans le serveur';\n        }\n      }\n\n    );\n  }\n\n  /**\n   * Reset the register form.\n   * @param form form to reset.\n   */\n  resetForm(form: NgForm) {\n    this.userService.user = {\n      name: '',\n      email: '',\n      password: ''\n    };\n    form.resetForm();\n    this.errormessage = '';\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html'\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n   * Initialize the user component.\n   */\n  ngOnInit() {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContributorService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Get the invitation list for the project.\n   * @param idProject id of the project.\n   */\n  getInvitations(idProject): Observable<any[]> {\n    return this.httpClient.get<any[]>(environment.API_URL + '/projects/' + idProject + '/invitations');\n  }\n\n  /**\n   * Invite a contributor to the project.\n   * @param idProject id of the project.\n   * @param email email adress of the contributor.\n   */\n  inviteContributor(idProject, email) {\n    return this.httpClient.post(environment.API_URL + '/projects/' + idProject + '/invite', { email });\n  }\n\n  /**\n   * Add a contributor to the project.\n   * @param idProject id of the project.\n   * @param email email adress of the contributor.\n   */\n  addContributor(idProject, email) {\n    return this.httpClient.post(environment.API_URL + '/projects/' + idProject + '/contributors', { email });\n  }\n\n  /**\n   * Remove a contributor from the project.\n   * @param idProject id of the project.\n   * @param id_user id of the contributor.\n   */\n  removeContributor(idProject, idUser) {\n    return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/contributors/' + idUser);\n  }\n\n  /**\n    * Remove a contributor from the project.\n    * @param idProject id of the project.\n    * @param idInvitation id of the invitation.\n    */\n  deleteInvitation(idProject, idInvitation) {\n    return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/invitations/' + idInvitation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Documentations } from '../models/documentations.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class DocumentationsService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Get the documentation of the project.\n     * @param idProject id of the project.\n     */\n    getDocumentations(idProject): Observable<Documentations[]> {\n      return this.httpClient.get<Documentations[]>(environment.API_URL + '/projects/' + idProject + '/documentations');\n    }\n\n    /**\n     * Add a documentation reference to the project.\n     * @param idProject id of the project.\n     * @param documentation documentation to add.\n     */\n    addDocumentation(idProject, documentation) {\n        return this.httpClient.post(environment.API_URL +  '/projects/' + idProject + '/documentations', documentation);\n    }\n\n    /**\n     * Edit a documentartion reference of the project.\n     * @param idProject id of the project.\n     * @param documentationId id of the documentation.\n     * @param documentation edited documentation.\n     */\n    editDocumentation(idProject, documentationId, documentation) {\n      return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/documentations/' + documentationId, documentation);\n    }\n\n\n    /**\n     * Remove a documentation reference of the project.\n     * @param idProject id of the project.\n     * @param id id of the documentation to remove.\n     */\n    removeDocumentation(idProject, id) {\n      return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/documentations/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Issues } from '../models/issues.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class IssuesService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Get the issues list of the project.\n     * @param idProject id of the project.\n     */\n    getIssues(idProject): Observable<Issues[]> {\n      return this.httpClient.get<Issues[]>(environment.API_URL + '/projects/' + idProject + '/issues');\n    }\n\n    /**\n     * Add an issue to the project.\n     * @param idProject id of the project.\n     * @param issue issue to be added.\n     */\n    addIssue(idProject, issue) {\n        return this.httpClient.post(environment.API_URL +  '/projects/' + idProject + '/issues', issue);\n    }\n\n    /**\n     * Edit an issue in the project.\n     * @param idProject id of the project.\n     * @param issueId id of the issue.\n     * @param issue edited issue.\n     */\n    editIssue(idProject, issueId, issue) {\n      return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/issues/' + issueId, issue);\n    }\n\n    /**\n     * Remove an issue from the project.\n     * @param idProject id of the project.\n     * @param id id of the issue to be removed.\n     */\n    removeIssue(idProject, id) {\n      return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/issues/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Projet } from '../models/projet.model';\nimport { environment } from 'src/environments/environment';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjetService {\n\n  constructor(private httpClient: HttpClient, private userervice: UserService) { }\n\n\n  /**\n   * Get the project list.\n   */\n  getProjects(): Observable<Projet[]> {\n    return this.httpClient.get<Projet[]>(environment.API_URL + '/projects');\n  }\n\n  /**\n   * Get a project.\n   * @param id id of the project.\n   */\n  getProject(id): Observable<Projet> {\n    return this.httpClient.get<Projet>(environment.API_URL + '/projects/' + id);\n  }\n\n  /**\n   * Delete a project.\n   * @param id id of the project.\n   */\n  deleteProject(id) {\n    return this.httpClient.delete(environment.API_URL + '/projects/' + id);\n  }\n\n  /**\n   * Add a new project.\n   * @param project project to be added.\n   */\n  addProject(project) {\n    return this.httpClient.post(environment.API_URL + '/projects', project);\n  }\n\n  /**\n   * Edit a project.\n   * @param idProject id of the project.\n   * @param project edited project.\n   */\n  editProject(idProject, project) {\n    return this.httpClient.put(environment.API_URL + '/projects/' + idProject, project);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Releases } from '../models/releases.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class ReleasesService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Get the release list of the project.\n     * @param idProject id of the project.\n     */\n    getReleases(idProject): Observable<Releases[]> {\n      return this.httpClient.get<Releases[]>(environment.API_URL + '/projects/' + idProject + '/releases');\n    }\n\n    /**\n     * Add a release to the project.\n     * @param idProject id of the project.\n     * @param release release to be added.\n     */\n    addRelease(idProject, release) {\n        return this.httpClient.post(environment.API_URL +  '/projects/' + idProject + '/releases', release);\n    }\n\n    /**\n     * Edit a release of the project.\n     * @param idProject id of the project.\n     * @param releaseId id of the release.\n     * @param release edited release.\n     */\n    editRelease(idProject, releaseId, release) {\n      return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/releases/' + releaseId, release);\n    }\n\n    /**\n     * Remove a release from the project.\n     * @param idProject id of the project.\n     * @param id id of the release to remove.\n     */\n    removeRelease(idProject, id) {\n      return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/releases/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Sprints } from '../models/sprints.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class SprintService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Get the sprint list of the project.\n   * @param idProject id of the project.\n   */\n  getSprints(idProject): Observable<Sprints[]> {\n    return this.httpClient.get<Sprints[]>(environment.API_URL + '/projects/' + idProject + '/sprints');\n  }\n\n  /**\n   * Get a sprint from the project.\n   * @param idProject id of the project.\n   * @param idSprint id of the sprint.\n   */\n  getSprint(idProject, idSprint) {\n    return this.httpClient.get(environment.API_URL + '/projects/' + idProject + '/sprints/' + idSprint);\n  }\n\n  /**\n   * Add a sprint to the project.\n   * @param idProject id of the project.\n   * @param sprint sprint to be added.\n   */\n  addSprint(idProject, sprint) {\n    return this.httpClient.post(environment.API_URL + '/projects/' + idProject + '/sprints', sprint);\n  }\n\n  /**\n   * Edit a sprint of the project.\n   * @param idProject id of the project.\n   * @param idSprint id of the sprint.\n   * @param sprint edited sprint.\n   */\n  editSprint(idProject, idSprint, sprint) {\n    return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/sprints/' + idSprint, sprint);\n  }\n\n  /**\n   * Remove a sprint from the project.\n   * @param idProject id of the project.\n   * @param id id of the sprint to remove.\n   */\n  removeSprint(idProject, id) {\n    return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/sprints/' + id);\n  }\n\n  /**\n   * Add an issue to the sprint.\n   * @param idProject id of the project.\n   * @param idSprint id of the sprint.\n   * @param idIssue id of the issue.\n   */\n  addIssueSprint(idProject, idSprint, idIssue) {\n    return this.httpClient.post(environment.API_URL + '/projects/' + idProject + '/sprints/' + idSprint + '/issues', idIssue);\n  }\n\n  /**\n   * Remove an issue from the project.\n   * @param idProject id of the project.\n   * @param idSprint id of the sprint.\n   * @param idIssue id of the issue.\n   */\n  removeIssue(idProject, idSprint, idIssue) {\n    return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/sprints/' + idSprint + '/issues/' + idIssue);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Tasks } from '../models/tasks.model';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class TasksService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Get the task list of the project.\n     * @param idProject id of the project.\n     */\n    getTasks(idProject): Observable<Tasks[]> {\n      return this.httpClient.get<Tasks[]>(environment.API_URL + '/projects/' + idProject + '/tasks');\n    }\n\n    /**\n     * Add a task to the project.\n     * @param idProject id of the project.\n     * @param task task to be added.\n     */\n    addTask(idProject, task) {\n        return this.httpClient.post(environment.API_URL +  '/projects/' + idProject + '/tasks', task);\n    }\n\n    /**\n     * Edit a task from the project.\n     * @param idProject id of the project.\n     * @param taskId id of the task.\n     * @param task edited task.\n     */\n    editTask(idProject, taskId, task) {\n      return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/tasks/' + taskId, task);\n    }\n\n    /**\n     * Remove a task from the project.\n     * @param idProject id of the project.\n     * @param id id of the task to remove.\n     */\n    removeTask(idProject, id) {\n      return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/tasks/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Tests } from '../models/tests.model';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class TestsService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Get the test list of the project.\n     * @param idProject id of the project.\n     */\n    getTests(idProject): Observable<Tests[]> {\n      return this.httpClient.get<Tests[]>(environment.API_URL + '/projects/' + idProject + '/tests');\n    }\n\n    /**\n     * Add a test to the project.\n     * @param idProject id of the project.\n     * @param test test to be added.\n     */\n    addTest(idProject, test) {\n        return this.httpClient.post(environment.API_URL +  '/projects/' + idProject + '/tests', test);\n    }\n\n    /**\n     * Edit a test from the project.\n     * @param idProject id of the project.\n     * @param testId id of the test.\n     * @param test edited test.\n     */\n    editTest(idProject, testId, test) {\n      return this.httpClient.put(environment.API_URL + '/projects/' + idProject + '/tests/' + testId, test);\n    }\n\n    /**\n     * Remove a test from the project.\n     * @param idProject id of the project.\n     * @param id id of the test to remove.\n     */\n    removeTest(idProject, id) {\n      return this.httpClient.delete(environment.API_URL + '/projects/' + idProject + '/tests/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JsonPipe } from '@angular/common';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user: User = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Register a new user.\n   * @param user user to be added.\n   */\n  postUser(user: User) {\n    return this.httpClient.post(environment.API_URL + '/register', user);\n  }\n\n  /**\n   * Login a user.\n   * @param infos login credentials.\n   */\n  login(infos) {\n    return this.httpClient.post(environment.API_URL + '/login', infos);\n  }\n\n  /**\n   * Get the user list.\n   */\n  getUsers(): Observable<User[]> {\n    return this.httpClient.get<User[]>(environment.API_URL + '/users');\n  }\n\n  /**\n   * Logout the current user.\n   */\n  logout() {\n    return this.httpClient.get(environment.API_URL + '/logout');\n  }\n\n  /**\n   * Create a token for the current user.\n   * @param infos user parameters.\n   */\n  setToken(infos) {\n    localStorage.setItem('userinfos', JSON.stringify({ infos }));\n  }\n\n  /**\n   * Get a user.\n   * @param email email of the user.\n   */\n  getUser(email: string): Observable<User> {\n    return this.httpClient.get<User>(environment.API_URL + '/users' + email);\n  }\n\n  /**\n   * Edit a user.\n   * @param user user to be edited.\n   */\n  editUser(user: User) {\n    console.log(user);\n    return this.httpClient.put(environment.API_URL + '/users/' + this.getIDOflogged(), user);\n  }\n\n  /**\n   * Get the current user dashboard.\n   */\n  getDashboard() {\n    return this.httpClient.get(environment.API_URL + '/dashboard');\n  }\n\n  /**\n   * Get the id of the current user.\n   */\n  getIDOflogged() {\n    const user = localStorage.getItem('userinfos');\n    return JSON.parse(user).infos._id;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://localhost:3002/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}